#version 400 core
layout(points) in;
layout(line_strip, max_vertices = 2) out;

uniform mat4 compositeMatrix;

in vec4 vColour[]; // Output from vertex shader for each vertex
in vec3 vDirection[];

out vec4 fColour; // Output to fragment shader

void main()
{
	fColour = vColour[0]; // Point has only one vertex
	if (fColour.a > 0.01)
	{
		
		vec4 d = vec4(vDirection[0], 0.0);
		vec4 p = gl_in[0].gl_Position;
		
		vec4 p1 = p - d;
		vec4 p2 = p + d;

		vec4 pp1 = compositeMatrix * p1;
		vec4 pp2 = compositeMatrix * p2;

		gl_Position = pp1;
		EmitVertex();

		gl_Position = pp2;
		EmitVertex();

		EndPrimitive();
	}
}